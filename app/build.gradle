apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    signingConfigs {
        release {
            def configProp = loadLocalConfig();
            storeFile file(configProp['key.store'])
            storePassword configProp['key.store.password']
            keyAlias configProp['key.alias']
            keyPassword configProp['key.alias.password']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        platform {
            applicationId "com.yanxinwei.bluetoothspppro"
            versionCode 1
            versionName "1.0"
        }
        own {
            applicationId "com.yanxinwei.bluetoothspppro.own"
            versionCode 1
            versionName "1.0"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'me.dm7.barcodescanner:zxing:1.9'
}

/**
 * 读取打包配置，一般只在release时才读取
 * @return
 */
def loadLocalConfig() {
    Properties property = new Properties()
    File cfgFile = file("../local.properties");
    if (cfgFile.exists()) {
        property.load(new FileInputStream(cfgFile))

    }
    if (!property['key.store']
            || !property['key.store.password']
            || !property['key.alias']
            || !property['key.alias.password']
    ) {
        println '----------------------------\n|\n| Please write config properties in local.properties, for instance :'
        println '|     key.store=/Users/xxx/Documents/xxx.keystore\n' +
                '|     key.store.password=*****\n' +
                '|     key.alias=xx\n' +
                '|     key.alias.password=****'
        println '|\n----------------------------\n'
        property.put('key.store', "debug.keystore")
        property.put('key.store.password', "")
        property.put('key.alias', "")
        property.put('key.alias.password', "")
    }
    return property;
}

